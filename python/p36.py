# %% 36. Valid Sudoku https://leetcode.com/problems/valid-sudoku/
import numpy as np


def is_valid_sudoku(board: list[list[str]]) -> bool:
    """
    Examples:
    >>> board = [
    ...     ["5", "3", ".", ".", "7", ".", ".", ".", "."],
    ...     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    ...     [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ...     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ...     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ...     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    ...     [".", "6", ".", ".", ".", ".", "2", "8", "."],
    ...     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    ...     [".", ".", ".", ".", "8", ".", ".", "7", "9"],
    ... ]
    >>> is_valid_sudoku(board)
    True
    >>> board = [
    ...     ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ...     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    ...     [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ...     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ...     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ...     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    ...     [".", "6", ".", ".", ".", ".", "2", "8", "."],
    ...     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    ...     [".", ".", ".", ".", "8", ".", ".", "7", "9"],
    ... ]
    >>> is_valid_sudoku(board)
    False
    """
    mat = np.char.replace(np.array(board), ".", "0").astype(int)

    for i in range(mat.shape[0]):
        if not (np.bincount(mat[i, :])[1:] <= 1).all():
            return False
        if not (np.bincount(mat[:, i])[1:] <= 1).all():
            return False

    for i in range(3):
        for j in range(3):
            if not (
                np.bincount(mat[3 * i : 3 * i + 3, 3 * j : 3 * j + 3].flatten())[1:]
                <= 1
            ).all():
                return False

    return True
